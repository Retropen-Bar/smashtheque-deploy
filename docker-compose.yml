version: '3'

services:

  redis:
    image: redis:latest
    env_file:
      - ./config/redis.env
    restart: always

  rails:
    image: retropenbar/smashtheque-app:${DOCKER_TAG_RAILS}
    volumes:
      - ./data/rails/log:/app/log
    env_file:
      - ./config/docker.env
      - ./config/rails.env
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "rails"}]'
    restart: always

  sidekiq:
    image: retropenbar/smashtheque-app:${DOCKER_TAG_RAILS}
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - ./data/sidekiq/log:/app/log
    env_file:
      - ./config/docker.env
      - ./config/rails.env
    environment:
      RUN_DB_MIGRATE: 0
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "sidekiq"}]'
    restart: on-failure

  #redbot:
  #  image: phasecorex/red-discordbot
  #  volumes:
  #    - ./data/redbot:/data
  #  env_file:
  #    - ./config/docker.env
  #    - ./config/redbot.env
  #  restart: unless-stopped

  caddy:
    image: retropenbar/smashtheque-caddy:${DOCKER_TAG_RAILS}
    ports:
      - ${EXTERNAL_2015_PORT}:2015
      - ${EXTERNAL_443_PORT}:443
      - ${EXTERNAL_80_PORT}:80
    volumes:
      - ./Caddyfile:/etc/Caddyfile:ro
      - ./data/caddy:/root/.caddy
    env_file:
      - ./config/caddy.env
    restart: always

  datadog:
    image: datadog/agent:${DOCKER_TAG_DATADOG}
    env_file:
      - ./config/datadog.env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /proc/:/host/proc/:ro
     - ./data/datadog/run:/opt/datadog-agent/run:rw
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
     - ./datadog/conf.d:/conf.d
     - ./datadog/init.d/89-copy-customfiles.sh:/etc/cont-init.d/89-copy-customfiles.sh
